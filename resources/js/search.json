[[{"l":"Home","p":["Rootking OSCP Certified"]}],[{"i":"#","p":["Tips & tricks for bloodhound"]},{"l":"Bloodhound"},{"l":"Setup Bloodhound"},{"l":"Collecting data with Sharphound","p":["sharphound.ps1","sharphound.exe"]},{"l":"BloodHound Tips","p":["Right click on node allow you to get information about the node and also how to compromise the user / machine. Always tag owned node, this can be useful during an internal pentest to note where you are. It's then possible to ask the shortest path to a node from the owned ones."]}],[{"l":"CME","p":["A powerful post-exploitation tool used for auditing and assessing large Active Directory networks."]}],[{"l":"AS-Rep Roasting","p":["Without Kerberos preauthentication in place, an attacker could send an AS-REQ to the domain controller on behalf of any AD user. After obtaining the AS-REP from the domain controller, the attacker could perform an offline password attack against the encrypted part of the response.","Our Kali machine is not joined to the domain, we also have to provide domain user credentials to obtain the TGS-REP hash.","You must be in the Domain","Rubeus"]}],[{"l":"DC Synchronization","p":["To perform a dcsync attacks user needs to have the Replicating Directory Changes, Replicating Directory Changes All, and Replicating Directory Changes in Filtered Set rights. By default, members of the Domain Admins, Enterprise Admins, and Administrators groups have these rights assigned."]}],[{"l":"DCOM","p":["Allows execution of any shell command as long as the authenticated user is authorized."]}],[{"i":"#","p":["Require Admin Account. If we are able to get our hands on the krbtgt password hash, we could create our own self-made custom TGTs, also known as golden tickets."]},{"l":"Golden Ticket"},{"l":"Creating a golden ticket using Mimikatz"}],[{"l":"CME","p":["A powerful post-exploitation tool used for auditing and assessing large Active Directory networks."]}],[{"i":"#","p":["Inspect client foothold in order to perform Client side attacks"]},{"l":"Target reconnaissance"},{"l":"Metadata","p":["Once we got some file to inspect, we can use exiftool to display metadata of any files."]},{"l":"Client fingerprinting","p":["http://canarytokens.com to confirm that victim use specific OS to perform our attack."]}],[{"l":"Directory Traversal"},{"i":"tips--tricks","l":"Tips & Tricks"},{"l":"Command attack vectors"},{"l":"Fuzzing","p":["Linux File Inclusion wordlist"]},{"l":"Useful file to query"}],[{"i":"#","p":["External insertion of files, potentially executing malicious code or accessing sensitive data."]},{"l":"File Inclusion"},{"l":"RCE with LFI via Log poisoning"},{"l":"Use PHP Wrappers in LFI"},{"l":"RFI"}],[{"l":"File Upload"},{"l":"Burp","p":["Use burp to upload a legitimate file.","Modify it until out get our malicious file uploaded !"]},{"l":"Reverse Shell"}],[{"i":"#","p":["Inspect client foothold in order to perform Client side attacks"]},{"l":"Binary Hijacking"},{"i":"generating-executable-from-c","l":"Generating executable from C++"},{"l":"Payload example","p":["Binary Hijacking"]},{"l":"Cross-Compile the C Code to a 64-bit application"}],[{"i":"cross-compile-the-c-code-to-64-bit-dll","l":"Cross-Compile the C++ Code to 64-Bit DLL"},{"i":"cross-compile-c-code-to-64-bit-dll","l":"Cross-Compile C++ Code to 64-Bit DLL"}],[{"l":"Deserialization","p":["TODO"]}],[{"l":"DLL Hijacking"},{"l":"Entry Point"},{"i":"malicious-dll-c","l":"Malicious DLL (C++)","p":["DLL Hijacking"]}],[{"l":"Git"},{"l":"Dump git repo"}]]